 CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
       CS 548 Enterprise Software Architecture and Design 
    This course will cover the issues in designing and engineering
    large enterprise software systems. Such systems are typically
    distributed and require increasingly complex inter-enterprise as
    well as intra-enterprise coordination. Technologies such as Web
    Services and cloud computing provide platforms for building such
    systems, and architectures such as service-oriented architecture,
    event-driven architecture and REST are idioms for structuring such
    systems. This course will focus on analysis and design of
    enterprise software systems, with particular emphasis on the
    architectures recommended for such systems. Some background in Web
    Services is also covered.

    The course is largely vendor-neutral, with short reviews in one or two
    places of technological solutions. Instead the emphasis of the
    course is on .design patterns. that the working software engineer
    for enterprise systems can use to develop DDA, SOA, ROA and EDA
    for enterprise computing. The course also considers workflow, both
    from the viewpoint of hypermedia networks as advocated by REST,
    and from the viewpoint of business process modeling languages such
    as BPEL and BPMN recommended by the SOA approach.

    CS 549 Distributed Systems and Cloud Computing is a useful companion
    course. In that course, students use a programming environment
    such as JEE or WCF to build distributed enterprise
    applications. This course focuses on the proper design patterns
    for engineering the architecture of such applications.  Exercises
    involve the use of tools, particularly using the Eclipse IDE, for
    engineering aspects of enterprise software systems.
  
    
    Enterprise information systems.  Software architecture.
Middleware, Web services and Cloud computing.
      
Data Modeling.  UML and E-R models.  XML Schemas.  
      
Data Processing.  Strategies for data processing.  Introduction to
XQuery.  JSON.
      
Domain-Driven Architecture.  Domain-driven design (DDD).
Object-relational mapping (ORM).
      
Service-oriented Architecture (SOA).  Standardized service contract.
Loose coupling.  Service abstraction.
      
Service-oriented Architecture (SOA).  Reusability and autonomy.
Statelessness.  Service discoverability.
      
Resource-Oriented Architecture (ROA).
Plain Old XML (POX) and REST.  Hypermedia networks.
      
Message-Oriented Middleware (MOM).  Asynchronous enterprise
integration patterns.
      
Event-Driven Architecture (EDA).  Complex event processing.
Semantic Data Modeling.  Introduction to RDF and RDFS.
      
Semantic data modeling.  RDFS and OWL.
      
Business Processing Modeling. Descriptive and analytic BPMN.
      
Petri Nets and Workflow.  Place-transition and workflow nets.
      
Cloud Data Stores.  Relational vs. object data models.  Algebras and co-algebras.
      
Contexts and dependency injection (CDI).  Transactional APIs.
      